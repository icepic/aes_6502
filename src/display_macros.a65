//======================================================================
// display_macros.asm
// ------------------
// A collection of macros that display internal values on the
// c64 screen. Used for debugging and functional demo.
//
//
// (c) 2017 Joachim Str√∂mbergson
//======================================================================

//------------------------------------------------------------------
//------------------------------------------------------------------
.macro print_string(str_ptr, len, screen_ptr)
{
                ldy #$00
pstr1:          lda str_ptr, y
                sta screen_ptr, y
                iny
                cpy #len
                bne pstr1
}


//------------------------------------------------------------------
//------------------------------------------------------------------
.macro print_curr_key_ptr(screen_ptr)
{
                :print_hexvalue(keyptr, screen_ptr + 3)
}



//------------------------------------------------------------------
// Dump the current key in expected matrix format.
//------------------------------------------------------------------
.macro print_curr_key(screen_ptr)
{
                :print_matrix(keyptr, screen_ptr)
}


//------------------------------------------------------------------
//------------------------------------------------------------------
.macro print_state_matrix(screen_ptr)
{
                :print_matrix(state, screen_ptr)
}


//------------------------------------------------------------------
//------------------------------------------------------------------
.macro print_matrix(mem_array, screen_ptr)
{
                :print_hexvalue(mem_array + 00, screen_ptr)
                :print_hexvalue(mem_array + 01, screen_ptr + 3)
                :print_hexvalue(mem_array + 02, screen_ptr + 6)
                :print_hexvalue(mem_array + 03, screen_ptr + 9)
                :print_hexvalue(mem_array + 04, screen_ptr + 40)
                :print_hexvalue(mem_array + 05, screen_ptr + 43)
                :print_hexvalue(mem_array + 06, screen_ptr + 46)
                :print_hexvalue(mem_array + 07, screen_ptr + 49)
                :print_hexvalue(mem_array + 08, screen_ptr + 80)
                :print_hexvalue(mem_array + 09, screen_ptr + 83)
                :print_hexvalue(mem_array + 10, screen_ptr + 86)
                :print_hexvalue(mem_array + 11, screen_ptr + 89)
                :print_hexvalue(mem_array + 12, screen_ptr + 120)
                :print_hexvalue(mem_array + 13, screen_ptr + 123)
                :print_hexvalue(mem_array + 14, screen_ptr + 126)
                :print_hexvalue(mem_array + 15, screen_ptr + 129)
}


//------------------------------------------------------------------
//------------------------------------------------------------------
.macro print_hexvalue(byte, screen_ptr)
{
                lda byte
                lsr
                lsr
                lsr
                lsr
                tay
                lda hexchars, y
                sta screen_ptr

                lda byte
                and #$0f
                tay
                lda hexchars, y
                sta screen_ptr + 1
}

//======================================================================
// OEF display_macros.asm
//======================================================================
